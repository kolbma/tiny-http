on: [push, pull_request]
name: CI
jobs:
  clippy_1_63:
    name: Clippy Lint 1.63, Stable, Nightly
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-1-63:
          - stable
          - nightly
          - '1.63'
        no-default-features-1-63:
          - --no-default-features
          - ''
        features-1-63:
          - ''
          - --features log
          - --features socket2
          - --features ssl-openssl
          - --features ssl-rustls
          - --features ssl-native-tls
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-1-63 }}
          components: clippy

      - name: Clippy ${{ matrix.rust-1-63 }}
        run: |
          cargo clippy ${{ matrix.no-default-features-1-63 }} ${{ matrix.features-1-63 }} -- -Aunknown_lints
          cargo --version
          rustc --version

  clippy_1_61:
    name: Clippy Lint 1.61
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-1-61:
          - '1.61'
        no-default-features-1-61:
          - --no-default-features
        features-1-61:
          - ''
          - --features log
          - --features ssl-openssl
          - --features ssl-rustls
          - --features ssl-native-tls
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-1-61 }}
          components: clippy

      - name: Clippy 1.61
        run: |
          cargo clippy ${{ matrix.no-default-features-1-61 }} ${{ matrix.features-1-61 }} -- -Aunknown_lints
          cargo --version
          rustc --version

  rustfmt:
    name: Rust Cargo fmt
    runs-on: ubuntu-latest
    needs: [clippy_1_63, clippy_1_61]
    strategy:
      matrix:
        no-default-features:
          - --no-default-features
          - ''
        features:
          - ''
          - --features log
          - --features socket2
          - --features ssl-openssl
          - --features ssl-rustls
          - --features ssl-native-tls
    steps:
      - uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt

      - name: Format
        run: |
          cargo fmt -- --check
          cargo --version

  test_log:
    name: Build & Test log feature
    runs-on: ubuntu-latest
    needs: rustfmt
    strategy:
      matrix:
        rust:
          - stable
          - nightly
          - '1.61'
        features:
          - ''
          - ssl-native-tls
          - ssl
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: |
          cargo build --release --no-default-features --features log,${{ matrix.features }}
          cargo --version
          rustc --version

      - name: Test
        run: |
          cargo test --no-default-features --features log,${{ matrix.features }}
          cargo --version

  test_native_tls:
    name: Build & Test ssl-native-tls feature
    runs-on: ubuntu-latest
    needs: test_log
    strategy:
      matrix:
        rust:
          - stable
          - nightly
          - '1.61'
        features:
          - ''
          - log
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: |
          cargo build --release --no-default-features --features ssl-native-tls,${{ matrix.features }}
          cargo --version
          rustc --version

      - name: Test
        run: |
          cargo test --no-default-features --features ssl-native-tls,${{ matrix.features }}
          cargo --version

  test_rustls:
    name: Build & Test ssl-rustls feature
    runs-on: ubuntu-latest
    needs: rustfmt
    strategy:
      matrix:
        rust:
          - stable
          - nightly
          - '1.61'
        features:
          - ''
          - log
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: |
          cargo build --release --no-default-features --features ssl-rustls,${{ matrix.features }}
          cargo --version
          rustc --version

      - name: Test
        run: |
          cargo test --no-default-features --features ssl-rustls,${{ matrix.features }}  
          cargo --version

  test_socket2:
    name: Build & Test socket2 feature
    runs-on: ubuntu-latest
    needs: rustfmt
    strategy:
      matrix:
        rust:
          - stable
          - nightly
          - '1.63'
        features:
          - ''
          - log
          - ssl-native-tls
          - ssl-rustls
          - ssl
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: |
          cargo build --release --no-default-features --features socket2,${{ matrix.features }}
          cargo --version
          rustc --version

      - name: Test
        run: |
          cargo test --no-default-features --features socket2,${{ matrix.features }}
          cargo --version

  test_ssl:
    name: Build & Test ssl feature
    runs-on: ubuntu-latest
    needs: test_log
    strategy:
      matrix:
        rust:
          - stable
          - nightly
          - '1.61'
        features:
          - ''
          - log
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: |
          cargo build --release --no-default-features --features ssl,${{ matrix.features }}
          cargo --version
          rustc --version

      - name: Test
        run: |
          cargo test --no-default-features --features ssl,${{ matrix.features }}
          cargo --version

  test_content_type:
    name: Build & Test content-type feature
    runs-on: ubuntu-latest
    needs: test_log
    strategy:
      matrix:
        rust:
          - stable
          - nightly
        features:
          - ''
          - log
          - socket2
          - ssl-rustls
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: |
          cargo build --release --no-default-features --features content-type,${{ matrix.features }}
          cargo --version
          rustc --version

      - name: Test
        run: |
          cargo test --no-default-features --features content-type,${{ matrix.features }}
          cargo --version
